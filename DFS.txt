				DFS of Graph
Given a connected undirected graph. Perform a Depth First Traversal of the graph.
Note: Use recursive approach to find the BFS traversal of the graph starting from the 0th vertex from left to right according to the graph..

Example :

For Input:
5 4
0 1 
0 2
0 3 
2 4

your output is: 
0 1 2 4 3 

Solution :

class Solution
{
    public ArrayList<Integer> ar = new ArrayList<>();
    public boolean visited[];
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj)
    {
        visited = new boolean[V];
        dfs(0,adj);
        return ar;
    }
    public void dfs(int src, ArrayList<ArrayList<Integer>> adj){
        visited[src] = true;
        ar.add(src);
        for(Integer neighbour : adj.get(src)){
            if(!visited[neighbour])
                dfs(neighbour,adj);
        }
    }
}