			BFS of graph 
Given a directed graph. The task is to do Breadth First Traversal of this graph starting from 0.
Note: One can move from node u to node v only if there's an edge from u to v and find the BFS traversal of the graph starting from the 0th vertex, from left to right according to the graph.

Example : 

For Input:
5 4
0 1 
0 2
0 3 
2 4
your output is: 
0 1 2 3 4 

Solution : 

class Solution
{
    public ArrayList<Integer> bfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj)
    {
        boolean[] visited = new boolean[V];
        LinkedList<Integer> q = new LinkedList<>();
        visited[0] = true;
        q.add(0);
        ArrayList<Integer> res = new ArrayList<>();
        res.add(0);
        while(!q.isEmpty()){
            for(int i=0;i<q.size();i++){
                int cur = q.removeFirst();
                for(Integer neighbour : adj.get(cur)){
                    if(!visited[neighbour]){
                        visited[neighbour] = true;
                        q.add(neighbour);
                        res.add(neighbour);
                    }
                }
            }
        }
        return res;
    }
}